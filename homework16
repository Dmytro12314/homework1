// Task 1
// Две компании решили объединиться, и для этого им нужно объединить базу данных своих клиентов.
// У вас есть 2 массива строк, в каждом из них - фамилии клиентов. Создайте на их основе один массив, 
// который будет представлять собой объединение двух массив без повторяющихся фамилий клиентов.

// const clients1 = ["Гилберт", "Сальваторе", "Пирс", "Соммерс", "Форбс", "Донован", "Беннет"];
// const clients2 = ["Пирс", "Зальцман", "Сальваторе", "Майклсон"];
// const allClients = [...clients1,...clients2]
// console.log(allClients);
//////////////////////////////////////////////


// Task 2
// Перед вами массив characters, состоящий из объектов. Каждый объект описывает одного персонажа.
// Создайте на его основе массив charactersShortInfo, состоящий из объектов, в которых есть только 3 поля - name, 
// lastName и age.

// const characters = [
//     {
//       name: "Елена",
//       lastName: "Гилберт",
//       age: 17, 
//       gender: "woman",
//       status: "human"
//     },
//     {
//       name: "Кэролайн",
//       lastName: "Форбс",
//       age: 17,
//       gender: "woman",
//       status: "human"
//     },
//     {
//       name: "Аларик",
//       lastName: "Зальцман",
//       age: 31,
//       gender: "man",
//       status: "human"
//     },
//     {
//       name: "Дэймон",
//       lastName: "Сальваторе",
//       age: 156,
//       gender: "man",
//       status: "vampire"
//     },
//     {
//       name: "Ребекка",
//       lastName: "Майклсон",
//       age: 1089,
//       gender: "woman",
//       status: "vempire"
//     },
//     {
//       name: "Клаус",
//       lastName: "Майклсон",
//       age: 1093,
//       gender: "man",
//       status: "vampire"
//     }
//   ];
  
//   const charactersShortInfo = characters.map(character => ({
//     name: character.name,
//     lastName: character.lastName,
//     age: character.age
//   }));
  
//   console.log(charactersShortInfo);
  
//////////////////////////////////////////////


// У нас есть объект user:
// Напишите деструктурирующее присваивание, которое:
// свойство name присвоит в переменную name
// свойство years присвоит в переменную age
// свойство isAdmin присвоит в переменную isAdmin (false, если нет такого свойства)
// Выведите переменные на экран.


// function setUserObj(user) {
//     const userInfo = {
//       name: user.name,
//       age: user.years,
//       isAdmin: user.isAdmin || false
//     };
//     return userInfo;
//   }
  
//   const user1 = {
//     name: "John",
//     years: 30
//   };
  
//   const userInfoObj = setUserObj(user1);
  
//   console.log(userInfoObj);
  

///////////////////////////////////////
// Task 5

// Дан массив книг. Вам нужно добавить в него еще одну книгу, не изменяя существующий массив 
// (в результате операции должен быть создан новый массив).

// function addBook(books, bookToAdd) {
//     return [...books, bookToAdd];
//   }
  
//   const books = [{
//     name: 'Harry Potter',
//     author: 'J.K. Rowling'
//   }, {
//     name: 'Lord of the rings',
//     author: 'J.R.R. Tolkien'
//   }, {
//     name: 'The witcher',
//     author: 'Andrzej Sapkowski'
//   }];
  
//   const bookToAdd = {
//     name: 'Game of thrones',
//     author: 'George R. R. Martin'
//   };
  
//   const updatedBooks = addBook(books, bookToAdd);
  
//   console.log(updatedBooks);
  

/////////////////////////////////////////
// ask 6

// Дан обьект employee. Добавьте в него свойства age и salary, не изменяя изначальный объект 
//(должен быть создан новый объект, который будет включать все необходимые свойства). 
//Выведите новосозданный объект в консоль.

// const employee = {
//   name: 'Vitalii',
//   surname: 'Klichko'
// }

// function addProperties(employee, age, salary) {
//     return {...employee, age, salary};
//   }
//     const employee = {
//     name: 'Vitalii',
//     surname: 'Klichko'
//   };
  
//   const addNewValue= addProperties(employee, 64, 10000000);
  
//   console.log(addNewValue);

//Task 7
//?????
//Дополните код так, чтоб он был рабочим
  
